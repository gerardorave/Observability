plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.2'
}

group = 'corp.xebia'
version = '1.0-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

repositories {
    mavenCentral()
}
ext {
    set('opentelemetryVersion',"1.29.0")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    //implementation 'io.opentelemetry:opentelemetry-api:1.42.1'
    //implementation 'io.opentelemetry.instrumentation:opentelemetry-instrumentation-annotations:2.8.0'
    runtimeOnly 'io.micrometer:micrometer-registry-otlp'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

    implementation 'io.micrometer:micrometer-tracing-bridge-otel'
    implementation "io.opentelemetry:opentelemetry-api:${opentelemetryVersion}"
    implementation "io.opentelemetry:opentelemetry-context:${opentelemetryVersion}"
    implementation "io.opentelemetry:opentelemetry-sdk:${opentelemetryVersion}"
    implementation "io.opentelemetry:opentelemetry-sdk-trace:${opentelemetryVersion}"
    implementation "io.opentelemetry:opentelemetry-sdk-metrics:${opentelemetryVersion}"
    implementation "io.opentelemetry:opentelemetry-sdk-common:${opentelemetryVersion}"
    implementation "io.opentelemetry:opentelemetry-sdk-extension-autoconfigure-spi:${opentelemetryVersion}"
    implementation "io.opentelemetry:opentelemetry-extension-trace-propagators:${opentelemetryVersion}"
    implementation "io.opentelemetry:opentelemetry-exporter-common:${opentelemetryVersion}"
    implementation "io.opentelemetry:opentelemetry-exporter-otlp:${opentelemetryVersion}"
    implementation "io.opentelemetry:opentelemetry-exporter-otlp-common:${opentelemetryVersion}"
    implementation "io.opentelemetry.instrumentation:opentelemetry-instrumentation-api-semconv:${opentelemetryVersion}-alpha"

    implementation "io.opentelemetry.instrumentation:opentelemetry-logback-appender-1.0:${opentelemetryVersion}-alpha"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    /*
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.hibernate:hibernate-validator:5.2.4.Final'
    implementation 'org.hibernate.validator:hibernate-validator:6.2.0.Final'
    implementation 'org.hibernate:hibernate-core:6.2.9.Final'
    runtimeOnly 'com.github.gwenn:sqlite-dialect:0.1.0'
    implementation 'org.flywaydb:flyway-core:11.3.2'
    runtimeOnly 'org.xerial:sqlite-jdbc:3.34.0'
    */
    implementation 'org.modelmapper:modelmapper:2.4.4'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.h2database:h2'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'org.flywaydb:flyway-core'
    //implementation 'mysql:mysql-connector-java:8.0.32'
    //implementation 'io.micronaut.data:micronaut-data-model:3.9.6'
}

test {
    useJUnitPlatform()
}